@model Telerik.Sitefinity.Frontend.Search.Mvc.Models.ISearchResultsModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Search.Mvc.Models;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Modules.Libraries;
@using Telerik.Sitefinity.Libraries.Model;

<div class="row @Model.CssClass">

            <div class="row">

              <div class="large-8 columns">
                 @if (@Model.Results.TotalCount > 0)
                 {
                    <h1>@Model.Results.TotalCount @Html.Raw(Model.ResultText)</h1>
                 }
                 else
                 {
                    <h1>@Html.Resource("No") @Html.Raw(Model.ResultText)</h1>
                 }
              </div>

              <div class="large-4 columns">
               @if (Model.AllowSorting && @Model.Results.TotalCount > 0)
               {
                  <div class="row">
                    <div class="small-5 columns text-right">
                        <span>@Html.Resource("SortBy")</span>
                    </div>
                    <div class="small-7 columns">
                        <select class="userSortDropdown">
                            <option value="@OrderByOptions.Relevance" @(Model.OrderBy == OrderByOptions.Relevance ? "selected=selected" : "")>@Html.Resource("Relevance")</option>
                            <option value="@OrderByOptions.Newest" @(Model.OrderBy == OrderByOptions.Newest ? "selected=selected" : "")>@Html.Resource("NewestFirst")</option>
                            <option value="@OrderByOptions.Oldest" @(Model.OrderBy == OrderByOptions.Oldest ? "selected=selected" : "")>@Html.Resource("OldestFirst")</option>
                        </select>
                    </div>
                  </div>
               }

              </div>

            </div>

            @if (Model.Languages.Length > 1)
            {
                <div>
                    <span>@Html.Resource("ChangeResultsLanguageLabel") </span>
                    @for (var i = 0; i < Model.Languages.Length; i++)
                    {
                        <a href="@(String.Format(ViewBag.LanguageSearchUrlTemplate, Model.Languages[i].Name))">@Model.Languages[i].DisplayName</a>
                        if (i < Model.Languages.Length - 2)
                        {
                            <span>, </span>
                        }
                        else if (i == Model.Languages.Length - 2)
                        {
                            <span> @Html.Resource("OrLabel") </span>
                        }
                    }
                </div>
            }            

            <ul class="no-bullet sf-search-results">
                @foreach (var item in Model.Results.Data)
                {
                    var hasLink = item.GetValue("Link") != null && !String.IsNullOrEmpty(item.GetValue("Link").ToString());
                   
                    <li class="media sf-media">  
                        @if (((Telerik.Sitefinity.Services.Search.Model.Document)item).ItemType.ToString() == typeof(Telerik.Sitefinity.Libraries.Model.Image).ToString())
                        {
                            <div class="left sf-img-thmb">
                                <a  href="@item.GetValue("Link")">
                                    <img src="@item.GetValue("Link")" alt="@item.GetValue("Title")" width="120"/>
                                </a>
                            </div>
                
                        }

                        else if (((Telerik.Sitefinity.Services.Search.Model.Document)item).ItemType.ToString() == typeof(Telerik.Sitefinity.Libraries.Model.Video).ToString())
                        {
                            LibrariesManager librariesManager = LibrariesManager.GetManager();
                            var videoTmbId = new Guid((string)item.GetValue("Id"));
                            Video video = librariesManager.GetVideo(videoTmbId);
                            if (video != null)
                            {
                                var thumbUrl = video.ThumbnailUrl;
                  
                                <div class="left sf-video-thmb">

                                    <a href="@item.GetValue("Link")">
                                        <img src="@thumbUrl" alt="@item.GetValue("Title")" width="120"/>
                               
                                        <div class="sf-icon-play"></div>
                                
                                    </a>

                                </div>
                    
                            }

                        }

                        else
                        {

                        }

              <div class="sf-media-body media-body">
                 <h3>
                    @if (hasLink)
                    {
                        <a href="@item.GetValue("Link")">@item.GetValue("Title")</a>
                    }
                    else
                    {
                        @item.GetValue("Title")
                    }
                 </h3>
                    <p>@Html.Raw(item.GetValue("HighLighterResult"))</p>
                    @if (hasLink)
                    {
                    <a href="@item.GetValue("Link")">@item.GetValue("Link")</a>
                    }
              </div>
            </li>   
                }

             </ul>
                @if (Model.DisplayMode == ListDisplayMode.Paging && Model.TotalPagesCount != null && Model.TotalPagesCount > 1)
                {
                    if (Model.CurrentPage == Model.TotalPagesCount)
                    {
                        <em >@((Model.ItemsPerPage * Model.TotalPagesCount) - Model.Results.TotalCount) of @Model.Results.TotalCount results</em>
                    }
                    else
                    {
                        <em>@Model.ItemsPerPage of @Model.Results.TotalCount results</em>
                    }
                    
                    @Html.Action("Index", "ContentPager", new
               {
                   currentPage = Model.CurrentPage,
                   totalPagesCount = Model.TotalPagesCount,
                   redirectUrlTemplate = ViewBag.RedirectPageUrlTemplate
               })
                }
           
</div>

<script type="text/javascript">
    $(document).ready(function () {

        //Dropdownlist Selectedchange event
        $(".userSortDropdown").change(function (value) {
            var selectedValue = $(value.currentTarget).val();
            var url = getResultsUrl(selectedValue);
            window.location.search = url;
        });

        // Returns url with all needed parameters
        function getResultsUrl(orderBy, language) {
            var orderByValue = orderBy || '@Request.QueryString["orderBy"]';
            var languageValue = language || '@Request.QueryString["language"]';

            var orderByParam = orderByValue ? '&orderBy=' + orderByValue : '';
            var languageParam = languageValue ? '&language=' + languageValue : '';

            return '?indexCatalogue=' + '@Request.QueryString["indexCatalogue"]' + '&' +
                'searchQuery=' + '@Request.QueryString["searchQuery"]' + '&' +
                'wordsMode=' + '@Request.QueryString["wordsMode"]' +
                orderByParam +
                languageParam;
        }
    });
</script>
